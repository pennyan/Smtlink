from sys import path
path.insert(0,"/ubc/cs/home/y/yanpeng/project/ACL2/mark-smtlink/z3_interface")
from RewriteExpt import to_smt_w_expt, Q
s = to_smt_w_expt()
H=s.isReal("H")
V0=s.isReal("V0")
DV=s.isReal("DV")
G1=s.isReal("G1")
GAMMA=s.isReal("GAMMA")
hypothesis=s.ifx(s.lt(0,V0),s.ifx(s.lt(0,DV),s.ifx(s.lt(0,G1),s.ifx(s.notx(s.lt(GAMMA,Q(1,6))),s.ifx(s.notx(s.lt(Q(1,5),GAMMA)),s.ifx(s.lt(DV,s.times(s.times(G1,1),s.reciprocal(s.times(2,1)))),s.ifx(s.lt(s.negate(DV),s.times(s.times(G1,1),s.reciprocal(s.times(2,1)))),s.ifx(s.notx(s.lt(H,1)),s.ifx(s.lt(H,s.plus(s.times(s.plus(1,s.times(1,(lambda var0:s.plus(s.times(1,s.times(s.plus(1,s.times(1,var0)),s.reciprocal(s.times(1,s.times(1,1))))),s.negate(s.reciprocal(1))))(V0))),s.reciprocal(s.times(G1,1))),s.negate(s.reciprocal(s.plus(1,s.negate(GAMMA)))))),s.lt(s.plus((lambda var1,var2,var3,var4,var5:s.times((lambda var6,var7:s.expt(var7,s.negate(var6)))(var1,var5),(lambda var8,var9,var10,var11:s.plus(-1,s.times(s.times(1,s.reciprocal(s.times(1,1))),s.times(s.plus(1,s.times(1,s.plus(var9,var10))),s.reciprocal(s.plus(1,s.times(1,s.plus(s.times(var8,var11),(lambda var12:s.plus(s.times(1,s.times(s.plus(1,s.times(1,var12)),s.reciprocal(s.times(1,s.times(1,1))))),s.negate(s.reciprocal(1))))(var9)))))))))(var1,var2,var3,var4)))(H,V0,DV,G1,GAMMA),(lambda var13,var14,var15,var16,var17:s.times((lambda var18,var19:s.expt(var19,s.negate(var18)))(var13,var17),(lambda var20,var21,var22,var23:s.plus(-1,s.times(s.times(1,s.reciprocal(s.times(1,1))),s.times(s.plus(1,s.times(1,s.plus(var21,var22))),s.reciprocal(s.plus(1,s.times(1,s.plus(s.times(var20,var23),(lambda var24:s.plus(s.times(1,s.times(s.plus(1,s.times(1,var24)),s.reciprocal(s.times(1,s.times(1,1))))),s.negate(s.reciprocal(1))))(var21)))))))))(var13,var14,var15,var16)))(s.negate(H),V0,DV,G1,GAMMA)),0),False),False),False),False),False),False),False),False),False)
conclusion=s.lt(s.plus((lambda var25,var26,var27,var28,var29:s.times((lambda var30,var31:s.expt(var31,s.negate(var30)))(var25,var29),(lambda var32,var33,var34,var35:s.plus(-1,s.times(s.times(1,s.reciprocal(s.times(1,1))),s.times(s.plus(1,s.times(1,s.plus(var33,var34))),s.reciprocal(s.plus(1,s.times(1,s.plus(s.times(var32,var35),(lambda var36:s.plus(s.times(1,s.times(s.plus(1,s.times(1,var36)),s.reciprocal(s.times(1,s.times(1,1))))),s.negate(s.reciprocal(1))))(var33)))))))))(var25,var26,var27,var28)))(s.plus(1,H),V0,DV,G1,GAMMA),(lambda var37,var38,var39,var40,var41:s.times((lambda var42,var43:s.expt(var43,s.negate(var42)))(var37,var41),(lambda var44,var45,var46,var47:s.plus(-1,s.times(s.times(1,s.reciprocal(s.times(1,1))),s.times(s.plus(1,s.times(1,s.plus(var45,var46))),s.reciprocal(s.plus(1,s.times(1,s.plus(s.times(var44,var47),(lambda var48:s.plus(s.times(1,s.times(s.plus(1,s.times(1,var48)),s.reciprocal(s.times(1,s.times(1,1))))),s.negate(s.reciprocal(1))))(var45)))))))))(var37,var38,var39,var40)))(s.negate(s.plus(1,H)),V0,DV,G1,GAMMA)),0)
s.prove(hypothesis, conclusion)
