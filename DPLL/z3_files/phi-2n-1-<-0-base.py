from sys import path
path.insert(0,"/ubc/cs/home/y/yanpeng/project/ACL2/smtlink/z3_interface")
from ACL2_translator import to_smt, Q
s = to_smt()
N=s.isReal("N")
V0=s.isReal("V0")
G1=s.isReal("G1")
PHI0=s.isReal("PHI0")
hypothesis=s.ifx(s.equal(N,3),s.ifx(s.notx(s.lt(V0,Q(9,10))),s.ifx(s.notx(s.lt(Q(11,10),V0)),s.ifx(s.equal(G1,Q(1,3200)),s.ifx(s.notx(s.lt(PHI0,0)),s.lt(PHI0,s.plus(-1,(lambda var0,var1,var2:s.times(s.times(s.times(1,s.reciprocal(s.times(1,1))),s.plus(1,s.times(1,var1))),s.reciprocal(s.plus(1,s.times(1,s.times(var0,var2))))))(s.plus(1,(lambda var3,var4,var5:s.plus(s.times((lambda var6:s.plus(s.times(s.times(1,s.reciprocal(s.times(1,s.times(1,1)))),s.plus(1,s.times(1,var6))),s.negate(s.times(1,s.reciprocal(1)))))(var4),s.reciprocal(var5)),s.negate(var3)))(N,V0,G1)),V0,G1))),False),False),False),False),False)
conclusion=s.lt((lambda var7,var8,var9,var10:s.plus((lambda var11,var12,var13,var14:s.plus(s.times(False,var12),s.plus(s.times(False,s.plus(-1,(lambda var15,var16,var17:s.times(s.times(s.times(1,s.reciprocal(s.times(1,1))),s.plus(1,s.times(1,var16))),s.reciprocal(s.plus(1,s.times(1,s.times(var15,var17))))))((lambda var18,var19,var20:s.plus(s.times((lambda var21:s.plus(s.times(s.times(1,s.reciprocal(s.times(1,s.times(1,1)))),s.plus(1,s.times(1,var21))),s.negate(s.times(1,s.reciprocal(1)))))(var19),s.reciprocal(var20)),s.negate(var18)))(var11,var13,var14),var13,var14))),s.times(False,s.plus(-1,(lambda var22,var23,var24:s.times(s.times(s.times(1,s.reciprocal(s.times(1,1))),s.plus(1,s.times(1,var23))),s.reciprocal(s.plus(1,s.times(1,s.times(var22,var24))))))(s.plus(1,(lambda var25,var26,var27:s.plus(s.times((lambda var28:s.plus(s.times(s.times(1,s.reciprocal(s.times(1,s.times(1,1)))),s.plus(1,s.times(1,var28))),s.negate(s.times(1,s.reciprocal(1)))))(var26),s.reciprocal(var27)),s.negate(var25)))(var11,var13,var14)),var13,var14))))))(var7,var8,var9,var10),(lambda var29,var30,var31:s.times(False,(lambda var32,var33,var34,var35:s.ifx(s.ifx(s.notx(False),s.notx(False),s.ifx(s.notx(False),s.notx(False),s.lt(var33,var32))),0,s.plus((lambda var36,var37,var38:s.times(False,s.plus(-1,s.times(s.times(1,s.reciprocal(s.times(1,1))),s.times(s.plus(1,s.times(1,var37)),s.reciprocal(s.plus(1,s.times(1,s.plus(s.times(var36,var38),(lambda var39:s.plus(s.times(s.times(1,s.reciprocal(s.times(1,s.times(1,1)))),s.plus(1,s.times(1,var39))),s.negate(s.times(1,s.reciprocal(1)))))(var37))))))))))(var33,var34,var35),s.plus((lambda var40,var41,var42:s.times(False,s.plus(-1,s.times(s.times(1,s.reciprocal(s.times(1,1))),s.times(s.plus(1,s.times(1,var41)),s.reciprocal(s.plus(1,s.times(1,s.plus(s.times(var40,var42),(lambda var43:s.plus(s.times(s.times(1,s.reciprocal(s.times(1,s.times(1,1)))),s.plus(1,s.times(1,var43))),s.negate(s.times(1,s.reciprocal(1)))))(var41))))))))))(s.negate(var33),var34,var35),False))))(1,s.plus(-2,var29),var30,var31)))(var7,var9,var10)))(N,PHI0,V0,G1),0)
s.prove(hypothesis, conclusion)
